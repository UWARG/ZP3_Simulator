%% file : SensorFusion.tlc
%% 
%% Description:
%%   Simulink Coder TLC Code Generation file for SensorFusion
%% 
%% Simulink version      : 10.6 (R2022b) 13-May-2022
%% TLC file generated on : 20-May-2023 16:58:02

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'SensorFusion';
     def.OutputFcnSpec = 'void mainFunc(double u1[3], double u2[3],double u3[1], double u4[1], double u5[1],double u6[1], double u7[1], double u8[1],double u9[1], double u10[1], double u11[1],double u12[1], double u13[1], double u14[1], double u15[1], double u16[1], double u17[1], double u18[1], double u19[1], double u20[1], double u21[1], double u22[1], double u23[1],double u24[1], double u25[1], double u26[1])';
     def.HeaderFiles = {'main.h'};
     def.SourceFiles = {'main.cpp'};
     def.IncPaths = {'C:\Users\mahus\Desktop\Warg\ZP3-Simulator\Autopilot\SensorFusion\Src'};
     def.SrcPaths = {'C:\Users\mahus\Desktop\Warg\ZP3-Simulator\Autopilot\SensorFusion\Src'};
     def.Options.language = 'C++';
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
%/

%implements SensorFusion "C"

%% Function: FcnGenerateUniqueFileName ====================================
%function FcnGenerateUniqueFileName (filename, type) void
    %assign isReserved = TLC_FALSE
    %foreach idxFile = CompiledModel.DataObjectUsage.NumFiles[0]
        %assign thisFile = CompiledModel.DataObjectUsage.File[idxFile]
        %if (thisFile.Name==filename) && (thisFile.Type==type)
            %assign isReserved = TLC_TRUE
            %break
        %endif
    %endforeach
    %if (isReserved==TLC_TRUE)
        %assign filename = FcnGenerateUniqueFileName(filename + "_", type)
    %endif
    %return filename
%endfunction

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup (block, system) void

    %% The Target Language must be C++
    %if ::GenCPP==0 && !IsModelReferenceSimTarget()
        %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C++ Target Language")>
    %endif

    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign hFileName = FcnGenerateUniqueFileName("SensorFusion_wrapper", "header")
        %assign hFileNameMacro = FEVAL("upper", hFileName)
        %openfile hFile = "%<hFileName>.h"
        %selectfile hFile
        #ifndef _%<hFileNameMacro>_H_
        #define _%<hFileNameMacro>_H_
        
        #ifdef MATLAB_MEX_FILE
        #include "tmwtypes.h"
        #else
        #include "rtwtypes.h"
        #endif
        
        

        extern void SensorFusion_wrapper_Output(const real_T* u1, const real_T* u2, const real_T* u3, const real_T* u4, const real_T* u5, const real_T* u6, const real_T* u7, const real_T* u8, const real_T* u9, const real_T* u10, const real_T* u11, const real_T* u12, const real_T* u13, const real_T* u14, const real_T* u15, const real_T* u16, const real_T* u17, const real_T* u18, const real_T* u19, const real_T* u20, const real_T* u21, const real_T* u22, const real_T* u23, const real_T* u24, const real_T* u25, const real_T* u26);
        
        #endif
        
        %closefile hFile
        
        %assign cFileName = FcnGenerateUniqueFileName("SensorFusion_wrapper", "source")
        %openfile cFile = "%<cFileName>.cpp"
        %selectfile cFile
        #include <string.h>
        #ifdef MATLAB_MEX_FILE
        #include "tmwtypes.h"
        #else
        #include "rtwtypes.h"
        #endif

        #include "main.h"

        %if IsModelReferenceSimTarget() && !::GenCPP
        extern "C" {
        %endif
        
        %if IsModelReferenceSimTarget() && !::GenCPP
        }
        %endif

        %if IsModelReferenceSimTarget() && !::GenCPP
        extern "C" {
        %endif
        void SensorFusion_wrapper_Output(const real_T* u1, const real_T* u2, const real_T* u3, const real_T* u4, const real_T* u5, const real_T* u6, const real_T* u7, const real_T* u8, const real_T* u9, const real_T* u10, const real_T* u11, const real_T* u12, const real_T* u13, const real_T* u14, const real_T* u15, const real_T* u16, const real_T* u17, const real_T* u18, const real_T* u19, const real_T* u20, const real_T* u21, const real_T* u22, const real_T* u23, const real_T* u24, const real_T* u25, const real_T* u26) {
            mainFunc((real_T*)(u1), (real_T*)(u2), (real_T*)(u3), (real_T*)(u4), (real_T*)(u5), (real_T*)(u6), (real_T*)(u7), (real_T*)(u8), (real_T*)(u9), (real_T*)(u10), (real_T*)(u11), (real_T*)(u12), (real_T*)(u13), (real_T*)(u14), (real_T*)(u15), (real_T*)(u16), (real_T*)(u17), (real_T*)(u18), (real_T*)(u19), (real_T*)(u20), (real_T*)(u21), (real_T*)(u22), (real_T*)(u23), (real_T*)(u24), (real_T*)(u25), (real_T*)(u26));
        }
        %if IsModelReferenceSimTarget() && !::GenCPP
        }
        %endif

        %closefile cFile

        %<LibAddToCommonIncludes("%<hFileName>.h")>
        %if IsModelReferenceSimTarget()
            %<SLibAddToStaticSources("%<cFileName>.cpp")>
        %else
            %<LibAddToModelSources("%<cFileName>")>
        %endif
    %else
        %<LibAddToCommonIncludes("main.h")>
    %endif
    %<SLibAddToStaticSources("main.cpp")>
%endfunction

%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup (block, system) void
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
    %else
        %<LibBlockSetIsExpressionCompliant(block)>
    %endif
%endfunction

%% Function: Outputs ======================================================
%function Outputs (block, system) Output
    %if IsModelReferenceSimTarget() || CodeFormat=="S-Function" || ::isRAccel
        %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
        %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
        %assign u3_ptr = LibBlockInputSignalAddr(2, "", "", 0)
        %assign u4_ptr = LibBlockInputSignalAddr(3, "", "", 0)
        %assign u5_ptr = LibBlockInputSignalAddr(4, "", "", 0)
        %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
        %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
        %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
        %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
        %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
        %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
        %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
        %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
        %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
        %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
        %assign u16_ptr = LibBlockInputSignalAddr(15, "", "", 0)
        %assign u17_ptr = LibBlockInputSignalAddr(16, "", "", 0)
        %assign u18_ptr = LibBlockInputSignalAddr(17, "", "", 0)
        %assign u19_ptr = LibBlockInputSignalAddr(18, "", "", 0)
        %assign u20_ptr = LibBlockInputSignalAddr(19, "", "", 0)
        %assign u21_ptr = LibBlockInputSignalAddr(20, "", "", 0)
        %assign u22_ptr = LibBlockInputSignalAddr(21, "", "", 0)
        %assign u23_ptr = LibBlockInputSignalAddr(22, "", "", 0)
        %assign u24_ptr = LibBlockInputSignalAddr(23, "", "", 0)
        %assign u25_ptr = LibBlockInputSignalAddr(24, "", "", 0)
        %assign u26_ptr = LibBlockInputSignalAddr(25, "", "", 0)
        %% 
        /* %<Type> (%<ParamSettings.FunctionName>): %<Name> */
        SensorFusion_wrapper_Output(%<u1_ptr>, %<u2_ptr>, %<u3_ptr>, %<u4_ptr>, %<u5_ptr>, %<u6_ptr>, %<u7_ptr>, %<u8_ptr>, %<u9_ptr>, %<u10_ptr>, %<u11_ptr>, %<u12_ptr>, %<u13_ptr>, %<u14_ptr>, %<u15_ptr>, %<u16_ptr>, %<u17_ptr>, %<u18_ptr>, %<u19_ptr>, %<u20_ptr>, %<u21_ptr>, %<u22_ptr>, %<u23_ptr>, %<u24_ptr>, %<u25_ptr>, %<u26_ptr>);
    %else
        %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)
        %assign u2_ptr = LibBlockInputSignalAddr(1, "", "", 0)
        %assign u3_ptr = LibBlockInputSignalAddr(2, "", "", 0)
        %assign u4_ptr = LibBlockInputSignalAddr(3, "", "", 0)
        %assign u5_ptr = LibBlockInputSignalAddr(4, "", "", 0)
        %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
        %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
        %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
        %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
        %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
        %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
        %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
        %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
        %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
        %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
        %assign u16_ptr = LibBlockInputSignalAddr(15, "", "", 0)
        %assign u17_ptr = LibBlockInputSignalAddr(16, "", "", 0)
        %assign u18_ptr = LibBlockInputSignalAddr(17, "", "", 0)
        %assign u19_ptr = LibBlockInputSignalAddr(18, "", "", 0)
        %assign u20_ptr = LibBlockInputSignalAddr(19, "", "", 0)
        %assign u21_ptr = LibBlockInputSignalAddr(20, "", "", 0)
        %assign u22_ptr = LibBlockInputSignalAddr(21, "", "", 0)
        %assign u23_ptr = LibBlockInputSignalAddr(22, "", "", 0)
        %assign u24_ptr = LibBlockInputSignalAddr(23, "", "", 0)
        %assign u25_ptr = LibBlockInputSignalAddr(24, "", "", 0)
        %assign u26_ptr = LibBlockInputSignalAddr(25, "", "", 0)
        %% 
        mainFunc((real_T*)%<u1_ptr>, (real_T*)%<u2_ptr>, (real_T*)%<u3_ptr>, (real_T*)%<u4_ptr>, (real_T*)%<u5_ptr>, (real_T*)%<u6_ptr>, (real_T*)%<u7_ptr>, (real_T*)%<u8_ptr>, (real_T*)%<u9_ptr>, (real_T*)%<u10_ptr>, (real_T*)%<u11_ptr>, (real_T*)%<u12_ptr>, (real_T*)%<u13_ptr>, (real_T*)%<u14_ptr>, (real_T*)%<u15_ptr>, (real_T*)%<u16_ptr>, (real_T*)%<u17_ptr>, (real_T*)%<u18_ptr>, (real_T*)%<u19_ptr>, (real_T*)%<u20_ptr>, (real_T*)%<u21_ptr>, (real_T*)%<u22_ptr>, (real_T*)%<u23_ptr>, (real_T*)%<u24_ptr>, (real_T*)%<u25_ptr>, (real_T*)%<u26_ptr>);
    %endif
%endfunction

%% [EOF]
